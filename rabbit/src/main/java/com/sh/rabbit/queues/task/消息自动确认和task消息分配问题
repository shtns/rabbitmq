消息自动确认问题：

1、开启消息自动确认当接收到五个消息，就会告诉rabbitmq这些消息我已经消费了，而rabbitmq就会从队列中把这些消息删除，实际消息还没有真正处理完成
如果在处理第2个消息的时候，服务宕机了就会存在丢失消息的情况，消息自动确认机制谨慎使用。

work消息分配问题：

1、一个生产者发送10消息，下面有两个消费者监听消息，因为work队列消息的分配默认是均衡，所以两个消费者接收到的消息都是5个
当消费者1，处理消息很快时而消费者2处理消息较慢，这样会拖垮系统性能。

2、使用work队列，一般不推荐使用默认的消息分配策略，则手动设置消费者每次只消费一个消息，关闭消息自动确认机制
消费完之后手动确认消息已消费，这样就不会出现两个消费者同样五个消息，消费者1处理很快，消费者2处理特别慢，从而拖垮系统的性能问题
使用这种方式那个消费者消费信息比较快，就多消费些，消费慢的就少消费。